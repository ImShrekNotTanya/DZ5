import sys
from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QLabel, QLineEdit, QPushButton, QPixmap, QMessageBox
from PyQt6.QtGui import QIcon, QColor
from PyQt6.QtCore import Qt

class LoginPage(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Авторизация")  # Заголовок окна
        self.setGeometry(100, 100, 300, 200)  # Позиция и размеры окна
        self.setWindowIcon(QIcon("icon.png"))  # Иконка приложения

        # Установка цвета фона
        self.setStyleSheet("background-color: #f0f8ff;")  # Цвет фона

        # Создаем вертикальный layout
        self.layout = QVBoxLayout()

        # Поле для ввода имени пользователя
        self.label_username = QLabel("Имя пользователя:")
        self.layout.addWidget(self.label_username)
        
        self.input_username = QLineEdit()
        self.layout.addWidget(self.input_username)
        
        # Поле для ввода пароля
        self.label_password = QLabel("Пароль:")
        self.layout.addWidget(self.label_password)
        
        self.input_password = QLineEdit()
        self.input_password.setEchoMode(QLineEdit.EchoMode.Password)  # Скрытие пароля
        self.layout.addWidget(self.input_password)

        # Кнопка для входа
        self.login_button = QPushButton("Войти")
        self.login_button.clicked.connect(self.check_login)  # Подключаем метод
        self.layout.addWidget(self.login_button)

        self.setLayout(self.layout)

    def check_login(self):
        # Проверка имени пользователя и пароля
        username = self.input_username.text()
        password = self.input_password.text()

        # Здесь должна быть логика проверки учетных данных (например, с базой данных)
        if username == "user" and password == "pass":  # Пример успешного входа
            self.open_profile_page()
        else:
            QMessageBox.warning(self, "Ошибка", "Неверное имя пользователя или пароль!")

    def open_profile_page(self):
        self.profile_window = ProfilePage(self.input_username.text())
        self.profile_window.show()
        self.close()  # Закрываем окно авторизации

class ProfilePage(QWidget):
    def __init__(self, username):
        super().__init__()
        self.setWindowTitle("Личный профиль")
        self.setGeometry(100, 100, 300, 300)
        
        # Установка цвета фона
        self.setStyleSheet("background-color: #e6f7ff;")  # Цвет фона

        # Создание layout для профиля
        layout = QVBoxLayout()

        # Отображение имени пользователя
        self.label_greeting = QLabel(f"Добро пожаловать, {username}!")
        layout.addWidget(self.label_greeting)

        # Загрузка изображения пользователя
        self.image_label = QLabel()
        pixmap = QPixmap("profile_picture.png")  # Укажите путь к изображению
        self.image_label.setPixmap(pixmap.scaled(100, 100, Qt.AspectRatioMode.KeepAspectRatio))  # Масштабируем изображение
        layout.addWidget(self.image_label)

        self.setLayout(layout)

# Запуск приложения
if __name__ == '__main__':
    app = QApplication(sys.argv)
    window = LoginPage()
    window.show()
    sys.exit(app.exec())
